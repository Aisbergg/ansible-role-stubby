---
- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- name: Ensure Stubby is installed
  package:
    name: "{{ __stubby_package }}"
    state: present

- name: Ensure Stubby cache dir exists
  file:
    path: /var/cache/stubby
    state: directory
    owner: root
    group: root

- name: Configure Stubby
  template:
    src: "stubby-{{ __stubby_config_version }}.yml.j2"
    dest: "{{ __stubby_config_location }}"
    owner: root
    group: root
    mode: 0644
    validate: stubby -C "%s" -i
  vars:
    cfg: "{{ __stubby_config_defauls | combine(stubby_config) }}"
  notify: restart stubby

- when: stubby_service_enabled or stubby_service_state != 'stopped'
  block:
  - name: Disable systemd-resolved service
    service:
      name: systemd-resolved
      state: stopped
      enabled: false

  - name: Check if NetworkManager is available
    shell: command -v networkctl
    changed_when: false
    register: networkctl_available

  - name: Disable the NetworkManager internal DNS resolver
    ini_file:
      path: /etc/NetworkManager/NetworkManager.conf
      section: main
      option: dns
      value: "{{ 'none' if stubby_service_enabled else omit }}"
      mode: 0600
    when: networkctl_available.stdout | length > 0

  - name: Ensure Stubby is set as sytem DNS resolver
    template:
      src: resolv.conf.j2
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: 0644

- name: Manage Stubby service
  service:
    name: "{{ __stubby_service_name }}"
    state: "{{ stubby_service_state }}"
    enabled: "{{ stubby_service_enabled }}"
